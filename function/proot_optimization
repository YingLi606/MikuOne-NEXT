RED='\e[1;31m'
GREEN='\e[1;32m'
YELLOW='\e[1;33m'
BLUE='\e[1;34m'
PINK='\e[1;35m'
RES='\e[0m'

ERROR="[${RED}错误${RES}]:"
WORRY="[${YELLOW}警告${RES}]:"
SUSSEC="[${GREEN}成功${RES}]:"
INFO="[${BLUE}信息${RES}]:"

Modify_the_variable() {
    sed -i "s/^${1}=.*/${1}=${2}/" ${3}
}

get_linux_distro() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$ID"
    elif [ -f /etc/issue ]; then
        local issue_content=$(cat /etc/issue | awk '{print $1; exit}')
        echo "$issue_content" | tr '[:upper:]' '[:lower:]'
    else
        echo "unknown"
    fi
}

detect_package_manager() {
    local distro=$(get_linux_distro)
    case "$distro" in
        "ubuntu"|"debian"|"linuxmint"|"pop"|"kali")
            echo "apt"
            ;;
        "centos"|"rhel"|"rocky"|"almalinux")
            echo "yum"
            ;;
        "fedora")
            echo "dnf"
            ;;
        "arch"|"manjaro"|"endeavouros")
            echo "pacman"
            ;;
        "opensuse"|"suse")
            echo "zypper"
            ;;
        *)
            if command -v apt >/dev/null 2>&1; then
                echo "apt"
            elif command -v dnf >/dev/null 2>&1; then
                echo "dnf"
            elif command -v yum >/dev/null 2>&1; then
                echo "yum"
            elif command -v pacman >/dev/null 2>&1; then
                echo "pacman"
            elif command -v zypper >/dev/null 2>&1; then
                echo "zypper"
            elif [ -d "/data/data/com.termux/files/usr" ]; then
                echo "pkg"
                return
            else
                echo "unknown"
                return 1
            fi
            ;;
    esac
}

package_manager=$(detect_package_manager)

self_install() {
    if ! command -v "$1" &>/dev/null; then
        echo -e "${RED}未安装 $1，正在安装...${RES}"
        $package_manager install -y "$1"
    fi
}

hcjx() {
    echo -e "${GREEN}按回车键继续...${RES}"
    read -r
}

echo -e "${INFO}正在优化系统，请勿退出！"
echo "127.0.0.1 localhost" >/etc/hosts
mkdir -p /run/systemd/resolve
echo -e "${GREEN}正在配置DNS${RES}"
echo -e "nameserver 8.8.8.8
nameserver 114.114.114.114" >/run/systemd/resolve/stub-resolv.conf
echo -e "nameserver 8.8.8.8
nameserver 114.114.114.114" >/etc/resolv.conf
echo -e "${GREEN}尝试禁用无用检测${RES}"
ln -s ~/MikuOne-NEXT/mikunext.sh /usr/bin/mikunext
chmod 777 /usr/bin/mikunext
touch ~/.hushlogin
$package_manager update -y &
$package_manager upgrade -y
Modify_the_variable last_time_aptup $(date +%s) ${HOME}/MikuOne-NEXT/config/config.sh

current_distro=$(get_linux_distro)
supported_distros=("ubuntu" "debian" "kali" "gxde")
whiptail_available=0

if [[ " ${supported_distros[@]} " =~ " ${current_distro} " ]]; then
    if command -v whiptail >/dev/null 2>&1; then
        whiptail_available=1
    else
        echo -e "${INFO}目标系统${current_distro}，检测到未安装whiptail，开始安装${RES}"
        self_install whiptail
        if command -v whiptail >/dev/null 2>&1; then
            whiptail_available=1
        else
            echo -e "${WORRY}目标系统${current_distro}，whiptail安装失败，将跳过MikuOne安装询问${RES}"
            whiptail_available=0
        fi
    fi
else
    echo -e "${INFO}当前系统${current_distro}不支持MikuOne安装，跳过whiptail检测与相关流程${RES}"
    whiptail_available=0
fi

self_install language-pack-zh-hans
self_install fonts-wqy-microhei
self_install fonts-wqy-zenhei
self_install glibc-langpack-zh
self_install xfonts-wqy
self_install ttf-wqy-zenhei
self_install wget
self_install git
self_install jq
self_install curl
self_install bc

echo -e "${GREEN}请自行手动配置语言${RES}"
hcjx

dpkg-reconfigure locales
echo -e "${INFO} 手动语言配置完成，2秒后继续...${RES}"
sleep 2
clear

if [ $whiptail_available -eq 1 ]; then
    whiptail --title "是否安装MikuOne？" --yesno "是否需要安装MikuOne？该工具可用于很大用途" 10 60
    if [ $? -eq 0 ]; then
        echo -e "${SUSSEC} 用户选择安装MikuOne，正在克隆仓库...${RES}"
        git clone https://dl.gancmcs.top/https://github.com/YingLi606/MikuOne.git
        
        sleep 2
        clear
        echo -e "${SUSSEC} MikuOne已完成安装步骤，请重新启动脚本即可（如果失败，请手动从Github仓库克隆）${RES}"
    else
        clear
        echo -e "${INFO} 用户选择无需安装MikuOne，该步骤跳过，请重新启动脚本即可${RES}"
    fi
fi

exit
